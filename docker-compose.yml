services:
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"  # Required for certbot HTTP challenge
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot  # Certbot challenges directory
      - ./certbot/conf:/etc/letsencrypt  # SSL certs storage
      - ./frontend/build:/var/www/html/:ro
    networks:
      lab-webproxy:
        ipv4_address: 10.11.0.6

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      lab-webproxy:
        ipv4_address: 10.11.0.7
    entrypoint: sh -c "certbot certonly --webroot -w /var/www/certbot --email test@test.com --agree-tos --no-eff-email --rsa-key-size 4096 --expand --force-renewal -d domain.com -d www.domain.com"

  backend:
    image: backend-image:latest            # Use the same name as `docker build -t`
    container_name: backend-server
    restart: unless-stopped
    environment:
      - ConnectionStrings__DefaultConnection=server=database;port=3306;database=user_account;user=dev;password=password
    networks:
      lab-webproxy:
        ipv4_address: 10.11.0.8

  database:
    container_name: mysql_database
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: user_account
      MYSQL_USER: dev
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      lab-webproxy:
        ipv4_address: 10.11.0.9

networks:
  lab-webproxy:
    driver: bridge
    ipam:
      config:
        - subnet: 10.11.0.0/16
          gateway: 10.11.0.1

volumes:
  mysql_data:
